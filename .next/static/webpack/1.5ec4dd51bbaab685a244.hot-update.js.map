{"version":3,"file":"static/webpack/1.5ec4dd51bbaab685a244.hot-update.js","sources":["webpack:///./components/animatingWithGSAP/index.js"],"sourcesContent":["import { Component } from \"react\";\n\nimport ScrollMagic from \"ScrollMagic\";\n\nimport TweenMax from \"TweenMax\";\nimport \"animation.gsap\";\nimport \"debug.addIndicators\";\nimport {\n  wrapper,\n  square,\n  placeholder,\n  que,\n  mainHeader,\n  scene,\n  eye\n} from \"./index.module.scss\";\n\nexport default class Scroll extends Component {\n  constructor(props) {\n    super(props);\n    this.controller = new ScrollMagic.Controller();\n\n    this.symbol = null;\n    // reference to the animation\n    this.myTween = null;\n  }\n\n  applyBlur = () => {\n    TweenMax.set(this.symbol, {\n      webkitFilter: \"blur(\" + this.element.a + \"px)\"\n    });\n  };\n\n  componentDidMount() {\n    this.element = { a: 0 }; //start the blur at 0 pixels\n\n    // TweenMax.to(this.element, 5, {\n    //   a: 10,\n    //   repeat: 100,\n    //   onUpdate: this.applyBlur,\n    //   yoyo: true\n    // });\n\n    new ScrollMagic.Scene({\n      triggerElement: \"#scene3\",\n      duration: 400\n    })\n      .setTween(\"#eye\", {\n        opacity: 0\n      })\n      //   .setPin(\"#eye\")\n      .addIndicators({ name: \"EYEEEE\" })\n      .addTo(this.controller);\n\n    // this.myTween = TweenMax.to(this.symbol, 1, { x: 100, y: 100 });\n    // build tween\n    // var tween = TweenMax.to(\"#animate3\", 1, { className: \"+=fish\" });\n\n    // // build scene\n    // var scene = new ScrollMagic.Scene({\n    //   triggerElement: \"#trigger3\",\n    //   duration: 200,\n    //   offset: -50\n    // })\n    //   .setTween(tween)\n    //   .addIndicators({ name: \"tween css class\" }) // add indicators (requires plugin)\n    //   .addTo(controller);\n\n    // new ScrollMagic.Scene({\n    //   triggerElement: \"#scrollStarts\",\n    //   duration: 400, // scroll distance\n    //   offset: 0 // start this scene after scrolling for 50px\n    // })\n    //   .setTween(\"#myElement\", {\n    //     x: 220,\n    //     color: \"white\"\n    //   })\n    //   .addIndicators({ name: \"target\" })\n    //   //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n    //   .addTo(this.controller); // assign the scene to the controller\n    // new ScrollMagic.Scene({\n    //   triggerElement: \"#scrollStarts\",\n    //   duration: 400, // scroll distance\n    //   offset: 0 // start this scene after scrolling for 50px\n    // })\n    //   .setTween(\"#square\", {\n    //     webkitFilter: \"blur(0px)\",\n    //     scale: 2\n    //   })\n    //   .addIndicators({ name: \"square\" })\n    //   //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n    //   .addTo(this.controller); // assign the scene to the controller\n    // new ScrollMagic.Scene({\n    //   triggerElement: \"#scene2\",\n    //   duration: 800,\n    //   offset: 100\n    // })\n    //   //   .setPin(\"#eye\")\n    //   .setTween(\"#eye\", {\n    //     scale: 0,\n    //     opacity: 0\n    //   })\n    //   .addIndicators() // add indicators (requires plugin)\n    //   .addTo(this.controller);\n  }\n\n  render() {\n    return (\n      <div className={wrapper}>\n        <div className={scene}>\n          <h1 className={mainHeader}>ETERNALITES</h1>\n        </div>\n        <div id=\"scene2\" className={scene}>\n          <div ref={div => (this.symbol = div)} id=\"eye\" className={eye}>\n            SYMBOL\n          </div>\n        </div>\n        <div id=\"scene3\" className={scene}>\n          <img src=\"/static/girl.jpg\" />\n        </div>\n        {/* <div className={placeholder} />\n        <div id=\"scrollStarts\">\n          Scrolling animation starts when this is in the middle ------->\n        </div>\n        <div className={que} style={{ height: \"600px\", background: \"yellow\" }}>\n          <div id=\"square\" className={square} />\n          <div id=\"square2\" className={square} />\n          <div\n            id=\"wrapper\"\n            style={{ height: \"300px\", background: \"lightgreen\" }}\n          >\n            <h1 id=\"myElement\">TARGET</h1>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AADA;AAGA;AACA;AAZA;AAEA;AACA;AACA;AANA;AAOA;AACA;;;AAOA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AADA;AAJA;AAQA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;;;;AAvHA;AACA;;;;;A","sourceRoot":""}
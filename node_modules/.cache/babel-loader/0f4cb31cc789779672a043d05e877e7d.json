{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nathan/Desktop/Projects/eternalites/components/animatingWithGSAP/index.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport ScrollMagic from \"ScrollMagic\";\nimport \"animation.gsap\";\nimport \"debug.addIndicators\";\nimport { wrapper, square, placeholder, que, mainHeader } from \"./index.module.scss\";\n\nvar Scroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scroll, _Component);\n\n  function Scroll(props) {\n    var _this;\n\n    _classCallCheck(this, Scroll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scroll).call(this, props));\n    _this.controller = new ScrollMagic.Controller();\n    return _this;\n  }\n\n  _createClass(Scroll, [{\n    key: \"componentDidMountfr\",\n    value: function componentDidMountfr() {\n      new ScrollMagic.Scene({\n        triggerElement: \"#scrollStarts\",\n        duration: 400,\n        // scroll distance\n        offset: 0 // start this scene after scrolling for 50px\n\n      }).setTween(\"#myElement\", {\n        x: 220,\n        color: \"white\"\n      }).addIndicators({\n        name: \"target\"\n      }) //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n      .addTo(this.controller); // assign the scene to the controller\n\n      new ScrollMagic.Scene({\n        triggerElement: \"#scrollStarts\",\n        duration: 400,\n        // scroll distance\n        offset: 0 // start this scene after scrolling for 50px\n\n      }).setTween(\"#square\", {\n        webkitFilter: \"blur(0px)\",\n        scale: 2\n      }).addIndicators({\n        name: \"square\"\n      }) //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n      .addTo(this.controller); // assign the scene to the controller\n\n      new ScrollMagic.Scene({\n        triggerElement: \"#scrollStarts\",\n        duration: 10\n      }).setPin(\"#square2\").addIndicators({\n        name: \"2 (duration: 0)\"\n      }) // add indicators (requires plugin)\n      .addTo(this.controller);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: mainHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"ETERNALITES\"), React.createElement(\"div\", {\n        className: scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"SCENE 1\"), React.createElement(\"div\", {\n        className: scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"SCENE 2\"), React.createElement(\"div\", {\n        className: scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"SCENE 3\"));\n    }\n  }]);\n\n  return Scroll;\n}(Component);\n\nexport { Scroll as default };","map":{"version":3,"sources":["/Users/nathan/Desktop/Projects/eternalites/components/animatingWithGSAP/index.js"],"names":["Component","ScrollMagic","wrapper","square","placeholder","que","mainHeader","Scroll","props","controller","Controller","Scene","triggerElement","duration","offset","setTween","x","color","addIndicators","name","addTo","webkitFilter","scale","setPin","scene"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,gBAAP;AACA,OAAO,qBAAP;AACA,SACEC,OADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,GAJF,EAKEC,UALF,QAMO,qBANP;;IAQqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,IAAIR,WAAW,CAACS,UAAhB,EAAlB;AAFiB;AAGlB;;;;0CAEqB;AACpB,UAAIT,WAAW,CAACU,KAAhB,CAAsB;AACpBC,QAAAA,cAAc,EAAE,eADI;AAEpBC,QAAAA,QAAQ,EAAE,GAFU;AAEL;AACfC,QAAAA,MAAM,EAAE,CAHY,CAGV;;AAHU,OAAtB,EAKGC,QALH,CAKY,YALZ,EAK0B;AACtBC,QAAAA,CAAC,EAAE,GADmB;AAEtBC,QAAAA,KAAK,EAAE;AAFe,OAL1B,EASGC,aATH,CASiB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OATjB,EAUE;AAVF,OAWGC,KAXH,CAWS,KAAKX,UAXd,EADoB,CAYO;;AAE3B,UAAIR,WAAW,CAACU,KAAhB,CAAsB;AACpBC,QAAAA,cAAc,EAAE,eADI;AAEpBC,QAAAA,QAAQ,EAAE,GAFU;AAEL;AACfC,QAAAA,MAAM,EAAE,CAHY,CAGV;;AAHU,OAAtB,EAKGC,QALH,CAKY,SALZ,EAKuB;AACnBM,QAAAA,YAAY,EAAE,WADK;AAEnBC,QAAAA,KAAK,EAAE;AAFY,OALvB,EASGJ,aATH,CASiB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OATjB,EAUE;AAVF,OAWGC,KAXH,CAWS,KAAKX,UAXd,EAdoB,CAyBO;;AAE3B,UAAIR,WAAW,CAACU,KAAhB,CAAsB;AAAEC,QAAAA,cAAc,EAAE,eAAlB;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C,OAAtB,EACGU,MADH,CACU,UADV,EAEGL,aAFH,CAEiB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAFjB,EAE8C;AAF9C,OAGGC,KAHH,CAGS,KAAKX,UAHd;AAID;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAEP,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEI,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,QAAA,SAAS,EAAEkB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAK,QAAA,SAAS,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAK,QAAA,SAAS,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF;AAsBD;;;;EA9DiCxB,S;;SAAfO,M","sourcesContent":["import { Component } from \"react\";\n\nimport ScrollMagic from \"ScrollMagic\";\nimport \"animation.gsap\";\nimport \"debug.addIndicators\";\nimport {\n  wrapper,\n  square,\n  placeholder,\n  que,\n  mainHeader\n} from \"./index.module.scss\";\n\nexport default class Scroll extends Component {\n  constructor(props) {\n    super(props);\n    this.controller = new ScrollMagic.Controller();\n  }\n\n  componentDidMountfr() {\n    new ScrollMagic.Scene({\n      triggerElement: \"#scrollStarts\",\n      duration: 400, // scroll distance\n      offset: 0 // start this scene after scrolling for 50px\n    })\n      .setTween(\"#myElement\", {\n        x: 220,\n        color: \"white\"\n      })\n      .addIndicators({ name: \"target\" })\n      //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n      .addTo(this.controller); // assign the scene to the controller\n\n    new ScrollMagic.Scene({\n      triggerElement: \"#scrollStarts\",\n      duration: 400, // scroll distance\n      offset: 0 // start this scene after scrolling for 50px\n    })\n      .setTween(\"#square\", {\n        webkitFilter: \"blur(0px)\",\n        scale: 2\n      })\n      .addIndicators({ name: \"square\" })\n      //   .setPin(\"#myElement\") // pins the element for the the scene's duration\n      .addTo(this.controller); // assign the scene to the controller\n\n    new ScrollMagic.Scene({ triggerElement: \"#scrollStarts\", duration: 10 })\n      .setPin(\"#square2\")\n      .addIndicators({ name: \"2 (duration: 0)\" }) // add indicators (requires plugin)\n      .addTo(this.controller);\n  }\n\n  render() {\n    return (\n      <div className={wrapper}>\n        <h1 className={mainHeader}>ETERNALITES</h1>\n        <div className={scene}>SCENE 1</div>\n        <div className={scene}>SCENE 2</div>\n        <div className={scene}>SCENE 3</div>\n        {/* <div className={placeholder} />\n        <div id=\"scrollStarts\">\n          Scrolling animation starts when this is in the middle ------->\n        </div>\n        <div className={que} style={{ height: \"600px\", background: \"yellow\" }}>\n          <div id=\"square\" className={square} />\n          <div id=\"square2\" className={square} />\n          <div\n            id=\"wrapper\"\n            style={{ height: \"300px\", background: \"lightgreen\" }}\n          >\n            <h1 id=\"myElement\">TARGET</h1>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}